{{template "_header" .}}

<table width="100%">
<tr>
        <td> <h1>httpclout</h1> </td>
        <td>
        <h2><a href="https://github.com/andrewarrow/httpclout">https://github.com/andrewarrow/httpclout</a></h2>
        </td>
        <td>
                <img src="{{.baseURL}}api/v0/get-single-profile-picture/{{.pub58}}?fallback=https://bitclout.com/assets/img/default_profile_pic.png"/>
        <h2><a href="#" onclick="removeCookies(); return false;">Log Out</a></h2>
        </td>
</tr>
</table>

          <div>
<table width="100%">
{{range $i, $item := .items}}
<tr>
  <td valign="top" width="20%">
          <a href="https://bitclout.com/u/{{.Post.ProfileEntryResponse.Username}}">
          <img height="50" src="{{$.baseURL}}api/v0/get-single-profile-picture/{{.Post.PosterPublicKeyBase58Check}}"/>
          </a>
          <br/>
          <a href="https://bitclout.com/u/{{.Post.ProfileEntryResponse.Username}}">{{.Post.ProfileEntryResponse.Username}}</a>
  <br/>
  <br/>

  {{if .Post.RecloutedPostEntryResponse }}
          <a href="https://bitclout.com/u/{{.Post.RecloutedPostEntryResponse.ProfileEntryResponse.Username}}">
          <img height="50" src="{{$.baseURL}}api/v0/get-single-profile-picture/{{.Post.RecloutedPostEntryResponse.PosterPublicKeyBase58Check}}"/>
          </a>
          <br/>
          <a href="https://bitclout.com/u/{{.Post.RecloutedPostEntryResponse.ProfileEntryResponse.Username}}">{{.Post.RecloutedPostEntryResponse.ProfileEntryResponse.Username}}</a>
          <br/>
          <br/>
  {{end}}
  <a href="https://bitclout.com/posts/{{.Post.PostHashHex}}">{{ago .Timestamp}}</a>
  </td>
  <td>
          &nbsp;
  </td>
  <td width="60%" style="overflow-wrap: anywhere; -ms-word-break: break-all; word-break: break-all; word-break: break-word; outline: none;">
{{range $j, $sub := .Lines}}
        {{$sub}}<br/>
{{end}}
          {{range $j, $img := .Post.ImageURLs}}
                  <img src="{{$img}}" width="200"/>
                  <br/>
          {{end}}

                  <br/>
                  <form onsubmit="bumpDiamond('{{.Post.PostHashHex}}', '{{.Post.PosterPublicKeyBase58Check}}'); return false;"><input id="h-{{.Post.PostHashHex}}" type="submit" value="{{.Post.DiamondCount}} Diamond(s)"/></form>
                  <br/>
          {{if .Post.RecloutedPostEntryResponse }}
                  <div style="border: 5px solid green; padding: 1em;">
{{range $j, $sub := .RecloutedLines}}
        {{$sub}}<br/>
{{end}}
          {{range $j, $img := .Post.RecloutedPostEntryResponse.ImageURLs}}
                  <img src="{{$img}}" width="200"/>
                  <br/>
          {{end}}
          <form onsubmit="bumpDiamond('{{.Post.RecloutedPostEntryResponse.PostHashHex}}', '{{.Post.RecloutedPostEntryResponse.PosterPublicKeyBase58Check}}'); return false;"><input id="h-{{.Post.RecloutedPostEntryResponse.PostHashHex}}" type="submit" value="{{.Post.RecloutedPostEntryResponse.DiamondCount}} Diamond(s)"/></form>
                  </div>
          {{end}}
  <br/>
  <br/>
  </td>
  <td width="20%">
      &nbsp; 
  </td>
</tr>
<tr>
        <td colspan="3">
          <div style="padding: 1em;">
                <hr/>
          </div>
        </td>
</tr>
{{end}}
</table>

          </div>

<script>
function removeCookies() {
  document.cookie = 'httpclout_pub58=""; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
  document.cookie = 'httpclout_level=""; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
  document.cookie = 'httpclout_hmac=""; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
  document.cookie = 'httpclout_hex=""; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
  window.location.reload(false);
}
function handleMessage(e) {
  console.log(e);
  if (e.data.method == "initialize") {
    var thing = Object();
    thing.id = e.data.id;
    thing.service = "identity";
    thing.payload = Object();
    window.CloutId = e.source;
    window.CloutId.postMessage(thing, "*");
  } else {
    var signedHex = e.data.payload.signedTransactionHex;
    var xhr = new XMLHttpRequest();
    xhr.open("POST", '/tx', true);
    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    xhr.onreadystatechange = function() {
      if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
      }
    }
    xhr.send("signedHex="+signedHex);
  }
}
function bumpDiamond(hash, theirPub58) {
  var h = document.getElementById("h-"+hash);
  var amount = parseInt(h.value);
  amount++;
  h.value = '--- please wait ---';

  var cookieMap = Object();
  var cookies = document.cookie.split(';');
  for (var i=0; i<cookies.length; i++) {
    var tokens = cookies[i].split('=');
    cookieMap[tokens[0].trim()] = tokens[1];
  }

  var xhr = new XMLHttpRequest();
  xhr.open("POST", '/diamond', true);
  xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  xhr.onreadystatechange = function() {
    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
      var tx = xhr.responseText;
      var thing = Object();
      thing.id = createUUID();
      thing.method = 'sign';
      thing.service = "identity";
      thing.payload = Object();
      thing.payload.accessLevel = cookieMap.httpclout_level;
      thing.payload.accessLevelHmac = cookieMap.httpclout_hmac;
      thing.payload.encryptedSeedHex = cookieMap.httpclout_hex;
      thing.payload.transactionHex = tx;
                  console.log(window.CloutId);
      window.CloutId.postMessage(thing, "*");
      h.value = amount.toString() + ' Diamond(s)';
    }
  }
  xhr.send("hash="+hash+"&theirPub58="+theirPub58);
}

function createUUID(){
   
    let dt = new Date().getTime()
    
    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        const r = (dt + Math.random()*16)%16 | 0
        dt = Math.floor(dt/16)
        return (c=='x' ? r :(r&0x3|0x8)).toString(16)
    })
    
    return uuid
}

  window.addEventListener('message', handleMessage);
</script>

<iframe
  id="identity"
  frameborder="0"
  src="https://identity.bitclout.com/embed"
  style="height: 100vh; width: 100vw;"
  [style.display]="requestingStorageAccess ? 'block' : 'none'"
></iframe>
{{template "_footer" .}}          
