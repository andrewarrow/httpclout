{{template "_header" .}}

<table>
        <tr>
                <td>
          <h1>cloutcli's yes or no</h1>
                </td>
                <td>
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        {{ if .pub58 }}
                        Logged In As:
                        {{ end }}
                </td>
                <td>
                        &nbsp;
                        {{ if .pub58 }}
                           <img height="50" src="https://bitclout.com/api/v0/get-single-profile-picture/{{.pub58}}"/>
                        {{ end }}
                </td>
                <td>
                        &nbsp;
                </td>
                <td>
                        {{ if .pub58 }}
                        <form action="/logout" method="post" onsubmit="handleIdentityBitcloutLogout(); return false;">
                                <input type="submit" name="logout" value="logout"/>
                        </form>
                        {{ end }}
                </td>
        </tr>
</table>
          <div>
          <a href="https://bitclout.com/u/cloutcli">cloutcli</a> invites you to play the yes-or-no diamond game.
          <br/>
          <br/>

          We display a random new post, yet to receive any diamonds.
          You keep saying NO until we present one to you that is so good, you can't resist.
          <br/>
          <br/>
          <br/>
           
          </div>

          {{ if .successTheirPub58 }}
          <div style="text-align: center; font-size: 5em; font-weight: bold; padding: 10px; border: 2px solid white;">
                  Success! You gave 1 diamond to:
          <br/>
    <img height="100" src="https://bitclout.com/api/v0/get-single-profile-picture/{{.successTheirPub58}}"/>
          <br/>
          for <a href="https://bitclout.com/posts/{{.successPostHashHex}}">this post</a>.
          </div>
          <br/>
          <br/>
          {{ end }}

          <div>
<table width="100%">
<tr>
  <td valign="top" width="10%">
    <a href="https://bitclout.com/posts/{{.Post.PostHashHex}}">
    <img height="250" src="https://bitclout.com/api/v0/get-single-profile-picture/{{.Post.PosterPub58}}"/>
    </a>
  </td>
  <td valign="top" width="40%" style="overflow-wrap: anywhere; -ms-word-break: break-all; word-break: break-all; word-break: break-word; outline: none;">

          
          <div onclick="document.location.href='/yes-or-no';" style="cursor: pointer; text-align: center; font-size: 5em; font-weight: bold; padding: 10px; border: 2px solid white;">NO</div>

 {{ if .pub58 }}
          <div onclick="handleIdentityDiamondPost('{{.Post.PostHashHex}}', '{{.Post.PosterPub58}}');" style="cursor: pointer; text-align: center; font-size: 5em; font-weight: bold; padding: 10px; border: 2px solid white;">YES</div>
  {{ else }}
          <div onclick="handleIdentityBitcloutLogin('{{.Post.PostHashHex}}', '{{.Post.PosterPub58}}');" style="cursor: pointer; text-align: center; font-size: 5em; font-weight: bold; padding: 10px; border: 2px solid white;">YES</div>
  {{ end }}
          <br/>

        {{range $j, $sub := .Post.BodyLines}}
            {{$sub}}<br/>
        {{end}}
        {{range $j, $img := .Post.ImageURLs}}
            <img src="{{$img}}" width="200"/>
            <br/>
        {{end}}
  </td>
  <td valign="top" width="10%">
          &nbsp;
  </td>
  <td valign="top" width="40%">
    moments ago
    <br/>
    {{ts .Post.Timestamp}}
  </td>
</tr>
</table>
          </div>

<script>
      function handleIdentityBitcloutLogout() {
         document.cookie = 'identity_pub58=; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
         document.cookie = 'identity_level=; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
         document.cookie = 'identity_hmac=; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
         document.cookie = 'identity_hex=; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
         window.location.reload(false);
      };

      function handleIdentityBitcloutLogin(postHashHex, theirPub58) {
        window.rememberPostHashHex = postHashHex;
        window.rememberTheirPub58 = theirPub58;
        window.identityWindow = window.open('https://identity.bitclout.com/log-in?accessLevelRequest=4', null, 'toolbar=no, width=800, height=1000, top=0, left=0');
      }
 
      function handleIdentityDiamondPost(postHashHex, theirPub58) {
        window.rememberPostHashHex = postHashHex;
        window.rememberTheirPub58 = theirPub58;

        fetch('/diamond', {
          method: 'post',
          headers: {
            'Accept': 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded'
          },
          body: 'theirPub58='+theirPub58+'&postHashHex='+postHashHex
        }).then(res => res.text())
          .then(res => handleTheSign(res));
      }

      function handleTheSign(res) {

        console.log("res", res);
        var cookieMap = makeCookieMap()
        var thing = Object();
        thing.id = createUUID();
        thing.method = 'sign';
        thing.service = "identity";
        thing.payload = Object();
        thing.payload.accessLevel = 4;
        thing.payload.accessLevelHmac = cookieMap["identity_hmac"];
        thing.payload.encryptedSeedHex = cookieMap["identity_hex"];
        thing.payload.transactionHex = res;

        console.log(thing);
        let iframe = document.getElementById("identity");
        iframe.contentWindow.postMessage(thing, "*"); 
      }

      function makeCookieMap() {
        var cookieMap = Object();
        var cookies = document.cookie.split(';');
        for (var i=0; i<cookies.length; i++) {
          var tokens = cookies[i].split('=');
          cookieMap[tokens[0].trim()] = tokens[1];
        }
        return cookieMap;
      }

      function respond(window, id, payload) {
        window.postMessage({ id, service: "identity", payload }, "*");
      }
      
      window.addEventListener("message", function (event) {
        let method = event.data.method;
        if (method === "initialize") {
           respond(event.source, event.data.id, {});
        } else if (method === "login") {
            window.identityWindow.close();

            let eventPayload = event.data.payload;
            let pub58 = eventPayload.publicKeyAdded;
            var me = eventPayload.users[pub58];
            me.pub58 = pub58;

            document.cookie = 'identity_pub58='+pub58+'; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
            document.cookie = 'identity_level='+me.accessLevel+'; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
            document.cookie = 'identity_hmac='+me.accessLevelHmac+'; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
            document.cookie = 'identity_hex='+me.encryptedSeedHex+'; expires=Sun, 1 Jan 2026 00:00:00 UTC; path=/';
            handleIdentityDiamondPost(window.rememberPostHashHex, window.rememberTheirPub58);
        } else if (event.data.payload !== undefined && event.data.payload.signedTransactionHex !== undefined) {
          let signedTransactionHex = event.data.payload.signedTransactionHex;
          console.log("st", signedTransactionHex);

                fetch('/submit-tx', {
                  method: 'post',
                  headers: {
                    'Accept': 'application/json, text/plain, */*',
                    'Content-Type': 'application/x-www-form-urlencoded'
                  },
                  body: 'tx='+signedTransactionHex
                }).then(res => res.text())
                  .then(res => document.location.href='/yes-or-no?theirPub58=' + window.rememberTheirPub58 +
                               '&postHashHex=' + window.rememberPostHashHex);
                }
      });

      function createUUID() {

            let dt = new Date().getTime()

            const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                const r = (dt + Math.random()*16)%16 | 0
                dt = Math.floor(dt/16)
                return (c=='x' ? r :(r&0x3|0x8)).toString(16)
            })

            return uuid
      }

    </script>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <iframe
      class="hidden"
      id="identity"
      frameborder="0"
      src="https://identity.bitclout.com/embed"
      style="height: 100vh; width: 100vw;"
      [style.display]="requestingStorageAccess ? 'block' : 'none'"></iframe>
{{template "_footer" .}}
